---
import type { MarkdownHeading } from "astro";
import TableOfContentsHeading from "../components/TableOfContentsHeading.astro";
import GithubRepoLink from "../components/GithubRepoLink.astro";

const { headings, class: className, repo } = Astro.props;
const toc = buildToc(headings);

export type Heading = {
  slug: string;
  depth: number;
  text: string;
  subheadings: Array<Heading>;
};

function buildToc(headings: [MarkdownHeading]) {
  const toc: Array<Heading> = [];
  const parentHeadings = new Map();
  headings.forEach((h) => {
    const subheadings: Array<Heading> = [];
    const heading = { ...h, subheadings: subheadings };
    parentHeadings.set(heading.depth, heading);
    // Change 2 to 1 if your markdown includes your <h1>
    if (heading.depth === 2) {
      toc.push(heading);
    } else {
      parentHeadings.get(heading.depth - 1).subheadings.push(heading);
    }
  });
  return toc;
}
---

<nav class:list={["toc", className]}>
  <span class="text-md font-bold">Contents</span>
  <ul class="mt-2 block list-inside border-l-[1px] pl-2">
    {toc.map((heading) => <TableOfContentsHeading heading={heading} />)}
  </ul>
  {repo && <GithubRepoLink class="mt-4 pl-2" repo={repo} />}
</nav>
